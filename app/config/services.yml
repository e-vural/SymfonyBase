# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
#    parameter_name: value

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false


    #    service_service.example:
    #        class: Service\ServiceBundle\Example
    #        arguments: ["@service_id", "plain_value", "%parameter%"]

    app.exception_listener:
        class: 'Project\Utils\Core\Listeners\ExceptionListener'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    app.event_listener:
        class: 'Project\Utils\Core\Listeners\EventListener'
        arguments: ["@service_container"]
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.controller' }


    Project\Utils\Core\Php\:
        resource: '../../src/Project/Utils/Core/Php/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        #        exclude: '../../CommonServices/{CoreService}'
        public:  true
        arguments: ["@service_container"]

    Project\Utils\Core\Twig\:
        resource: '../../src/Project/Utils/Core/Twig/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Project/Utils/Core/Twig/{HelperClasses}'
        public:  true
        arguments: ["@service_container"]
        tags:
            - { name: "twig.extension" }

    Project\Utils\Custom\Php\:
        resource: '../../src/Project/Utils/Custom/Php/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        #        exclude: '../../CommonServices/{CoreService}'
        public:  true
        arguments: ["@service_container"]


    Project\Utils\Custom\Twig\:
        resource: '../../src/Project/Utils/Custom/Twig/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        #        exclude: '../../ProjectService/{CoreService}'
        public:  true
        arguments: ["@service_container"]
        tags:
            - { name: twig.extension }

#    Helperlar ekle, sil güncelle gibi kısımları içermeli
    Project\AdminBundle\Helpers\:
        resource: '../../src/Project/AdminBundle/Helpers/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        #        exclude: '../../src/Project/AdminBundle/Helpers/{HelperInterface}'
        public:  true
        arguments: ["@service_container"]


    # Monolog mesajı satır formatı
    monolog.formatter.session_request:
        class: 'Monolog\Formatter\LineFormatter'
        arguments:
            - "[%%datetime%%] [%%extra.token%%] %%channel%%.%%level_name%%: %%message%% %%context%% %%extra%%\n"

    # Her isteğin sonuna session bilgisi ekleme
    monolog.processor.session_request:
        class: 'Project\Utils\Core\Php\Monolog\SessionRequestProcessor'
        arguments:  ["@session", "@security.token_storage", "@request_stack"]
        tags:
            - { name: monolog.processor, method: processRecord }

    monolog.formatter.html:
        class: 'Monolog\Formatter\HtmlFormatter'

#TODO deneme için burası. datatable override yapma çalışması
#    sg_datatables.datatable.abstract:
#        class: Project\AdminBundle\Datatables\Traits\AbstractDatatable
#        abstract: true
#        arguments:
#            - '@security.authorization_checker'
#            - '@security.token_storage'
#            - '@translator'
#            - '@router'
#            - '@doctrine.orm.entity_manager'
#            - '@twig'
#            - '@service_container'
#
#    sg_datatables.factory:
#        class: Sg\DatatablesBundle\Datatable\DatatableFactory
#        public: true
#        arguments:
#            - '@security.authorization_checker'
#            - '@security.token_storage'
#            - '@translator'
#            - '@router'
#            - '@doctrine.orm.entity_manager'
#            - '@twig'
#            - '@service_container'



    login_listener:
        class: Project\Utils\Core\Listeners\LoginListener
        arguments: ["@service_container"]
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    logout_listener:
        class: Project\Utils\Core\Listeners\LogoutListener
        arguments: ["@service_container"]

    Project\Utils\Core\Listeners\DatabaseActivitySubscriber:
        arguments: ["@service_container"]
        tags:
            - { name: 'doctrine.event_subscriber' }


